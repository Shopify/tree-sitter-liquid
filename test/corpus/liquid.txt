==================
Literal
==================

<html>
  {{ 'string' }}
</html>

---
(template
 (content)
 (tag
  (expression
   (string)))
 (content))

==================
Filter
==================

<html>
  {{ 'string two' | split: " " }}
</html>

---
(template
 (content)
 (tag
  (expression
   (filter
    body: (expression (string))
    name: (identifier)
    (argument_list (string)))))
 (content))

==================
Filter w/ variable
==================

<html>
  {% assign space = " " %}
  <div>{{ 'string two' | split: space }}</div>
</html>

---
(template
 (content)
 (tag
  (statement
   (assignment
    variable_name: (identifier)
    value: (expression (string)))))
 (content)
 (tag
  (expression
   (filter
    body: (expression (string))
    name: (identifier)
    (argument_list (identifier)))))
 (content))

==================
Many filters
==================

<html>
  {{ 'string two' | split: space | first }}
</html>

---
(template
 (content)
 (tag
  (expression
   (filter
    body:
    (expression
     (filter
      body: (expression (string))
      name: (identifier)
      (argument_list (identifier))))
    name: (identifier))))
 (content))

==================
Filters with many arguments
==================

<html>
  {% assign kitchen_products = products | where: "type", "kitchen" %}
</html>

---
(template
 (content)
 (tag
  (statement
   (assignment
    variable_name: (identifier)
    value:
    (expression
     (filter
      body: (expression (identifier))
      name: (identifier)
      (argument_list (string) (string)))))))
 (content))

==================
Filters argument hash
==================

<html>
  {{ display_price | default: true, allow_false: true }}
</html>

---
(template
 (content)
 (tag
 (expression
  (filter
   body: (expression (identifier))
   name: (identifier)
   (argument_list
    (boolean)
    (argument key: (identifier) value: (boolean))))))
 (content))

==================
Filters precedence
==================

<html>
  {{ "Ground control to Major Tom." | split: "" | reverse | join: "" }}
</html>

---
(template
 (content)
 (tag
  (expression
   (filter
    body:
    (expression
     (filter
      body:
      (expression
       (filter
        body: (expression (string))
        name: (identifier)
        (argument_list (string))))
      name: (identifier)))
    name: (identifier)
    (argument_list (string)))))
 (content))

==================
Method Call
==================

<html>
  {{ page.title }}
</html>

---
(template
 (content)
 (tag
  (expression
   (access
    receiver: (identifier)
    method: (identifier))))
 (content))

==================
Compound Method Call With Filter
==================

<html>
  {{ data.page.title | reverse}}
</html>

---
(template
 (content)
 (tag
  (expression
   (filter
    body:
    (expression
     (access
      receiver:
      (access
       receiver: (identifier)
       method: (identifier))
      method: (identifier)))
    name: (identifier))))
 (content))

==================
If Statement
==================

<html>
  {{ if data.page != blank }}
    hello
  {{ endif }}
</html>

---
TODO
