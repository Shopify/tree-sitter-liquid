==================
Literal
==================

<html>
  {{ 'string' }}
</html>

---
  (template
   (content)
   (directive
    (string))
   (content))

==================
Filter
==================

<html>
  {{ 'string two' | split: " " }}
</html>

---
  (template
   (content)
   (directive
    (filter
     body: (string)
     name: (identifier)
     (argument_list (string))))
   (content))

==================
Filter with variable
==================

<html>
  {%assign space = " " %}
  <div>{{ 'string two' | split: space }}</div>
</html>

---
  (template
   (content)
   (directive
    (assignment
     variable_name: (identifier)
     value: (string)))
   (content)
   (directive
    (filter
     body: (string)
     name: (identifier)
     (argument_list (identifier))))
   (content))

==================
Many filters
==================

<html>
  {{ 'string two' | split: space | first }}
</html>

---
  (template
   (content)
   (directive
    (filter
     body:
      (filter
       body: (string)
       name: (identifier)
       (argument_list (identifier)))
     name: (identifier)))
   (content))

==================
Filters with many arguments
==================

<html>
  {% assign kitchen_products = products | where: "type", "kitchen" %}
</html>

---
  (template
   (content)
   (directive
    (assignment
     variable_name: (identifier)
     value:
     (filter
      body: (identifier)
      name: (identifier)
      (argument_list 
       (string) 
       (string)))))
   (content))

==================
Filters argument hash
==================

<html>
  {{ display_price | default: true, allow_false: true }}
</html>

---
  (template
   (content)
   (directive
    (filter
     body: (identifier)
     name: (identifier)
     (argument_list
      (boolean)
      (argument key: (identifier) value: (boolean)))))
   (content))

==================
Filters precedence
==================

<html>
  {{ "Ground control to Major Tom." | split: "" | reverse | join: "" }}
</html>

---
(template
 (content)
 (directive
   (filter
    body:
     (filter
      body:
       (filter
        body: (string)
        name: (identifier)
        (argument_list (string)))
      name: (identifier))
    name: (identifier)
    (argument_list (string))))
 (content))

==================
Method Call
==================

<html>
  {{ page.title }}
</html>

---
  (template
   (content)
   (directive
    (access
     receiver: (identifier)
     method: (identifier)))
   (content))

==================
Compound Method Call With Filter
==================

<html>
  {{ data["page"].title | reverse}}
</html>

---
  (template
   (content)
   (directive
    (filter
     body:
     (access
      receiver:
      (access
       receiver: (identifier)
       method: (string))
      method: (identifier))
     name: (identifier)))
   (content))

==================
Render 
==================

<html>
  {% render 'filename' %}
</html>

---
  (template
   (content)
   (directive
    (render
     file: (string)))
   (content))

==================
Render Loop
==================

<html>
  {% render 'filename' for array as item %}
</html>

---
  (template
   (content)
   (directive
    (render
     file: (string)
     modifier: (opt_as_expr
       item: (identifier)
       identifier: (identifier))))
   (content))

==================
Render With
==================

<html>
  {% render 'filename' with object%}
</html>

---
  (template
   (content)
   (directive
    (render
     file: (string)
     modifier: (opt_as_expr
       item: (identifier))))
   (content))

==================
Render Variable
==================

<html>
  {% render 'filename', variable: value %}
</html>

---
  (template
   (content)
   (directive
    (render
     file: (string)
     modifier: (argument_list
       (argument
        key: (identifier)
        value: (identifier)))))
   (content))

==================
Include 
==================

<html>
  {% include 'filename' %}
</html>

---
  (template
   (content)
   (directive
    (include
     (string)))
   (content))

==================
Keyword Conflict
==================

<html>
  <div class="width-{{ section.page }} fadeIn" data-delay="100ms">
</html>

---
  (template
   (content)
   (directive
    (access
     receiver: (identifier)
     method: (identifier)))
   (content))

