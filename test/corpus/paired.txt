==================
If 
==================

<html>
  {% if data.url != blank %}
    hello
  {% endif %}
</html>

---
(template
 (content)
 (directive
  (if_tag
   condition: (predicate
      left: (access
         receiver: (identifier)
         property: (identifier))
      right: (identifier))
   consequence: (block
     (content))))
 (content))

==================
If Contains
==================

<html>
  {% if product.tags contains 'healing' %}
    This potion contains restorative properties.
  {% endif %}
</html>

---
  (template
   (content)
   (directive
    (if_tag
     condition: (predicate
       left: (access
         receiver: (identifier)
         property: (identifier))
       right: (string))
     consequence: (block
       (content))))
   (content))

==================
If Elsif Else
==================

<html>
  {%- if template contains 'list' -%}
    <div class="collection-hero-{{ product.title }}">
      {{ product.color }}
    </div>
  {% elsif sections.settings.grid == 10 %}
    <div class="page -header text-center">
      {% render "thing" %}
    </div>
  {%- else -%}
    {%- assign limit = 16 -%}
    <div class="collection-hero-{{ limit }}">
  {%- endif -%}
</html>

---
  (template
   (content)
   (directive
    (if_tag
     condition: (predicate 
       left: (identifier)
       right: (string))
     consequence: (block 
       (content)
       (directive 
        (access 
         receiver: (identifier) 
         property: (identifier)))
       (content)
       (directive
        (access
         receiver: (identifier)
         property: (identifier)))
       (content))
     alternative: (elsif_tag
       condition: (predicate
         left: (access
           receiver: (access
             receiver: (identifier)
             property: (identifier))
           property: (identifier))
         right: (number))
       (block
        (content)
        (directive
         (render
          file: (string)))
        (content)))
     alternative: (else_tag
         (block
          (directive
           (assignment
            variable_name: (identifier)
            value: (number)))
          (content)
          (directive
           (identifier))
          (content)))))
(content))

==================
Unless
==================

<html>
  {% unless product.has_only_default_variant %}
    {% assign title = product.name %}
    <div>{{ title }}</div>
  {% endunless %}
</html>

---
(template
 (content)
 (directive
  (unless_tag
   condition: 
     (access 
      receiver: (identifier)
      property: (identifier))
   consequence: (block 
     (directive 
       (assignment
        variable_name: (identifier)
        value: 
          (access
           receiver: (identifier)
           property: (identifier))))
     (content) 
     (directive 
       (identifier))
     (content))))
(content))

==================
Case
==================

<html>
  {% case product.type %}
    {% when "Love" or "whateva" %}
      <div class="collection-{{ product.title }}">
        {{ product.color }}
      </div>
    {% when 'Strength' %}
      {% render "file" %}
      <p>This is a strength or health potion.</p>
    {% when 'Strength', 'dank', 'frank' %}
      {% render "file" %}
      <p>This is a strength or health potion.</p>
    {% else %}
      {% render "file" %}
      <div>content</div>
  {% endcase %}
</html>

---
  (template
   (content)
   (directive
    (case_tag
     receiver: (access
       receiver: (identifier)
       property: (identifier))
     conditions: (block 
       (when_tag
        condition: (predicate
           left: (string)
           right: (string))
        consequence: (block
          (content)
          (directive
            (access
             receiver: (identifier)
             property: (identifier)))
          (content)
          (directive
            (access
             receiver: (identifier)
             property: (identifier)))
          (content)))
       (when_tag
        condition: (argument_list 
          (string))
        consequence: (block
          (directive
            (render
             file: (string)))
          (content)))
       (when_tag
        condition: (argument_list 
          (string)
          (string)
          (string))
        consequence: (block
          (directive
            (render
             file: (string)))
          (content))))
  alternative: (else_tag
      (block
       (directive
         (render
          file: (string)))
       (content)))))
(content))

==================
Empty Case
==================

<html>
  {% case product.type %}
  {% endcase %}
</html>

---
  (template
   (content)
   (directive 
    (case_tag
     receiver: (access
       receiver: (identifier)
       property: (identifier))))
   (content))

==================
For Loop
==================

<html>
  {% for product in collection.products -%}
    {% assign name = product.title %}
    <div>{{ name }}</div>
    {% echo name %}
  {%- endfor %}
</html>

---
  (template
   (content)
   (directive
    (for_loop_tag
     item: (identifier)
     iterator: (access
       receiver: (identifier)
       property: (identifier))
     body: (block
       (directive
        (assignment
         variable_name: (identifier)
         value: (access
           receiver: (identifier)
           property: (identifier))))
       (content)
       (directive
        (identifier))
       (content)
       (directive
        (echo
         (identifier))))))
(content))

==================
For Loop wtih Offest
==================

<html>
  {% for product in collection.products offest: 2 -%}
    {% assign name = product.title %}
    {% if name != blank %}
      {% continue %}
    {% endif %}
    <div>{{ name }}</div>
    {% echo name %}
  {%- endfor %}
</html>

---

  (template
   (content)
   (directive
    (for_loop_tag
     item: (identifier)
     iterator: (access
       receiver: (identifier)
       property: (identifier))
     modifier: (argument_list
       (argument
        key: (identifier)
        value: (number)))
     body: (block
       (directive
        (assignment
         variable_name: (identifier)
         value: (access
           receiver: (identifier)
           property: (identifier))))
       (directive
        (if_tag
         condition: (predicate
           left: (identifier)
           right: (identifier))
         consequence: (block
           (directive
            (continue)))))
       (content)
       (directive
        (identifier))
       (content)
       (directive
        (echo
         (identifier))))))
(content))

==================
For Loop wtih Range
==================

<html>
  {% for i in (1..upper_limit) -%}
    {{ i }}
    {{ break }}
  {%- endfor %}
</html>

---
(template
 (content)
 (directive
  (for_loop_tag
   item: (identifier)
   iterator: (range
    start: (number)
    end: (identifier))
   body: (block
     (directive
       (identifier))
     (directive
       (identifier)))))
(content))

==================
For Loop wtih Else
==================

<html>
  {% for i in array -%}
    {% assign name = i %}
    <div>{{ name }}</div>
    {% echo name %}
  {% else %}
    {% assign name = "cool" %}
    <div>{{ name }}</div>
    {% echo name %}
  {%- endfor %}
</html>

---
  (template
   (content)
   (directive
    (for_loop_tag
     item: (identifier)
     iterator: (identifier)
     body: (block
       (directive
        (assignment
         variable_name: (identifier)
         value: (identifier)))
       (content)
       (directive
        (identifier))
       (content)
       (directive
        (echo
         (identifier))))
     alternative: (else_tag
       (block
        (directive
         (assignment
          variable_name: (identifier)
          value: (string)))
        (content)
        (directive
         (identifier))
        (content)
        (directive
         (echo
          (identifier)))))))
(content))

==================
For Loop with Cycle
==================

<html>
  {% for product in collection.products -%}
    {% cycle "group": "one", string, access.string %}
  {%- endfor %}
</html>

---
  (template
   (content)
   (directive
    (for_loop_tag
     item: (identifier)
     iterator: (access
       receiver: (identifier)
       property: (identifier))
     body: (block
      (directive
       (cycle
        group_name: (string)
        group_item: (string)
        group_item: (identifier)
        group_item: (access
          receiver: (identifier)
          property: (identifier)))))))
   (content))

==================
Nested For / If
==================

<html>
  {% for i in list %}
    {% if i != blank %}
      {% for j in list %}
        <div>{{ i }}</div>
      {% endfor %}
    {% else %}
      <div>{{ i }}</div>
    {% endif %}
  {% endfor %}
</html>

---
  (template
   (content)
   (directive 
    (for_loop_tag
     item: (identifier)
     iterator: (identifier)
     body: (block
       (directive 
        (if_tag
         condition: 
         (predicate
          left: (identifier)
          right: (identifier))
         consequence: (block
           (directive
            (for_loop_tag
             item: (identifier)
             iterator: (identifier)
             body: (block
               (content)
               (directive 
                (identifier))
               (content)))))
         alternative: (else_tag
           (block
            (content)
            (directive 
             (identifier))
            (content))))))))
(content))

==================
Capture
==================

<html>
  {%- capture title -%}
    {% if show_up_title -%}
      Upcase title: {{ up_title }}
    {%- else -%}
      Downcase title: {{ down_title }}
    {%- endif %}
  {%- endcapture %}
</html>

---
(template
 (content)
 (directive
  (capture_tag
   variable: (identifier)
   value: (block
    (directive
     (if_tag
      condition: (identifier)
      consequence: (block
       (content)
       (directive
         (identifier)))
      alternative: (else_tag
       (block
        (content)
        (directive
          (identifier)))))))))
  (content))

==================
Tablerow
==================

<html>
  {%- tablerow item in arr -%}
    {{ item }}
  {%- endtablerow %}
</html>

---
  (template
   (content)
   (directive
    (tablerow_tag
     item: (identifier)
     iterator: (identifier)
     body: (block
       (directive
         (identifier)))))
   (content))

==================
Paginate
==================

<html>
  {% paginate collection.products by 3, window_size: 1 %}
    {% for product in collection.products -%}
      {{ product.title }}
    {%- endfor %}
    {{- paginate | default_pagination }}
  {% endpaginate %}
</html>

---
  (template
   (content)
   (directive
    (paginate_tag
     item: (access
       receiver: (identifier)
       property: (identifier))
     iterator: (number)
     modifier: (argument_list
       (argument
        key: (identifier)
        value: (number)))
     body: (block
       (directive
        (for_loop_tag
         item: (identifier)
         iterator: (access
           receiver: (identifier)
           property: (identifier))
         body: (block
           (directive
            (access
             receiver: (identifier)
             property: (identifier))))))
       (directive
        (filter
         body: (identifier)
         name: (identifier))))))
(content))

==================
Form
==================

{% form 'storefront_password' %}
  <!-- form content -->
{% endform %}

---
(template
 (directive
  (form_tag
   (string)
   (content)))
 (content))

==================
Form with argument
==================

{% form 'form_type', return_to: string %}
  content
{% endform %}

---   
(template
 (directive
  (form_tag
   (string)
   (argument_list
    (argument
     (identifier)
     (identifier)))
   (content))))

==================
Form with many arguments
==================

{% form "product", product, id: 'custom-id', class: 'custom-class', data-example: '100' %}
  {{ somedata }}
{% endform %}

---
(template
 (directive
  (form_tag
   (string)
   (argument_list
    (identifier)
    (argument
     (identifier)
     (string))
    (argument
     (identifier)
     (string))
    (argument
     (identifier)
     (string)))
   (directive
    (identifier))))
 (content))

==================
Javascript
==================

{% javascript %}
  let x = 10;
{% endjavascript %}

---
(template
 (directive
  (javascript_tag
   (content)))
 (content))

==================
Schema
==================

{% schema %}
  {
    "property" : "value"
  }
{% endschema %}

---
(template
 (directive
  (schema_tag
   (content)
   (content)))
 (content))

==================
Style
==================

{% style %}
  .el{ display: flex: }
{% endstyle %}

---
(template
 (directive
  (style_tag
   (content)
   (content)
   (content)))
 (content))
